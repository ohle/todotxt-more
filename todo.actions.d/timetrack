#!/bin/bash

die() {
    echo "$@">&2
    exit 2
}

SCRIPTDIR="$(dirname $0)"

action=$1
shift

if [ -z "$TODO_DIR" ]; then
    echo "TODO_DIR not set">&2
    exit 2
fi
[ -z "$TIMETRACK_FILE" ] && TIMETRACK_FILE="$TODO_DIR/timetrack.txt"

[ "$action" = "usage" ] && {
  echo "  Timetrack output:"
  echo "    timetrack start [itemno|item]"
  echo "      Start tracking item (stops tracking previous one)"
  echo "    timetrack stop"
  echo "      Stop tracking"
  echo "    timetrack current [-t]"
  echo "      Show currently tracked task and the time it was started"
  echo "      -t - hide the time"
  echo "      -d - show relative time"
  echo "      -s - show relative time in seconds"
  echo "    timetrack log [[options]] [[fromdatetime]] [[todatetime]]"
  echo "      (Datetime is in Y-m-d H:M:S format, time component may be omitted)"
  echo "      Options:"
  echo "      -d - show relative time deltas"
  echo "      -s - show relative time deltas in seconds"
  echo "      Note: todatetime is non-inclusive"
  echo ""
  exit
}

reltime() {
    timestamp=$(date -d "$1 $2" +%s)
    if [ -n "$3" ]; then
        refstamp=$(date -d "$3" +%s)
    else
        refstamp=$(date +%s)
    fi
    echo $((refstamp - timestamp))
}

fmtreltime() {
    delta=$(reltime "$1" "$2" "$3")
    fmttimedelta "$delta"
}

fmttimedelta() {
    delta=$1
    if [ "$delta" -lt 60 ]; then
        echo "${delta}s"
    else
        delta=$((delta / 60))
        if [ $delta -lt 60 ]; then
            echo "${delta}m"
        else
            h=$((delta / 60))
            m=$((delta % 60))
            echo "${h}h${m}m"
        fi
    fi
}


[ $# -eq 0 ] && set -- current

action=$1
shift

NOW=$(date "+%Y-%m-%d %a %H:%M")


case $action in 
    "start")
        itemno=$1
        shift
        if [ -z "$itemno" ]; then
            echo "No item provided" >&2
            exit 1
        fi
        if echo "$itemno" | grep -qE '^[0-9]+$'; then
            item=$($TODO_FULL_SH -p show "$itemno")
        else
            item=$itemno
        fi
        echo "$NOW $item" >> "$TIMETRACK_FILE"
        ;;
    "stop")
        echo "$NOW idle" >> "$TIMETRACK_FILE"
        ;;
    "current"|"c")
        line=$(tail -n 1 "$TIMETRACK_FILE")
        date=$(echo "$line" | cut -d" " -f 1)
        time=$(echo "$line" | cut -d" " -f 3)
        task=$(echo "$line" | cut -d" " -f 4-)
        if [ "$1" = "-t" ]; then
            echo "$task"
        elif [ "$1" = "-d" ]; then
            reltime=$(fmtreltime "$date" "$time")
            echo "$reltime $task"
        elif [ "$1" = "-s" ]; then
            reltime=$(reltime "$date" "$time")
            echo "$reltime $task"
        else
            echo "$date $time $task"
        fi
        ;;
    "log")
        if [ "$1" = "-d" ]; then
            output_delta=1
            shift
        elif [ "$1" = "-s" ]; then
            output_delta=2 #raw
            shift
        else
            output_delta=0
        fi
        if [ -z "$1" ]; then
            fromtimestamp=0
        else
            fromtimestamp=$(date -d "$1" +%s)
            shift
        fi
        if [ -z "$1" ];  then
            totimestamp=$(date +%s)
        else
            totimestamp=$(date -d "$1" +%s)
            shift
        fi
        prevdatetime=""
        prevtask=""
        cat "$TIMETRACK_FILE" | while read line ; do
            date=$(echo "$line" | cut -d" " -f 1)
            time=$(echo "$line" | cut -d" " -f 3)
            task=$(echo "$line" | cut -d" " -f 4-)
            timestamp=$(date -d "$date $time" +%s)
            if [ $timestamp -gt $fromtimestamp ] && [ $timestamp -lt $totimestamp ]; then
                if [ $output_delta -eq 0 ]; then
                    echo $line
                fi
            fi
            if [ -n "$prevdate" ] && [ $output_delta -ne 0 ] ; then
                if [ $output_delta -eq 1 ]; then
                    reltime=$(fmtreltime "$prevdate" "$prevtime" "$date $time")
                elif [ $output_delta -eq 2 ]; then
                    reltime=$(reltime "$prevdate" "$prevtime" "$date $time")
                fi
                [ "$prevtask" != "idle" ] && echo "$reltime $prevtask"
            fi
            if [ $timestamp -gt $fromtimestamp ] && [ $timestamp -lt $totimestamp ]; then
                prevtask=$task
                prevdate="$date"
                prevtime="$time"
                [ $timestamp -gt $totimestamp ] && break
            fi
        done
        ;;
    daysummary)
        if [ -z "$1" ]; then
            fromdatetime="$(date +"%Y-%m-%d")"
        else
            fromdatetime=$1
            shift
        fi
        timestamp=$(date -d "$fromdatetime" +%s)
        if [ -z "$1" ];  then
            days=1
        else
            days=$1
            shift
        fi
        for _ in $(seq "$days"); do
            datelabel="$(date -d @$timestamp +"%Y-%m-%d %a")"
            todatetime=$(date -d @$((timestamp + 86401)) +"%Y-%m-%d")
            $TODO_FULL_SH timetrack log -s "$fromdatetime" "$todatetime" | "$SCRIPTDIR/timetrack_sum.py" | while read line; do
                class=$(echo "$line" | cut -d" " -f 1)
                duration=$(echo "$line" | cut -d" " -f 2)
                echo "$datelabel $class $(fmttimedelta "$duration")"
            done
            timestamp=$((timestamp + 86401))
            echo
        done
        ;;
    *)
        echo "Unknown timetrack action: $action">&2
        ;;
esac
